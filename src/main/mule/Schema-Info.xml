<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:compression="http://www.mulesoft.org/schema/mule/compression"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" 
	xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/compression http://www.mulesoft.org/schema/mule/compression/current/mule-compression.xsd">
	<flow name="Schema-InfoFlow" doc:id="a17038c1-0154-4850-96d7-1b6d6b181f11" >
		<http:listener doc:name="Listener" doc:id="4d6913db-ed36-431e-b014-e620f8e48fb2" config-ref="HTTP_Listener_config" path="/schemaInfo/{schemaConnection}"/>
		<set-variable value="#[attributes.uriParams.schemaConnection]" doc:name="Set Variable" doc:id="dc0b30cd-e6e5-49f8-8a4f-550a082f3847" variableName="schemaConnection"/>
		<http:request method="GET" doc:name="Request sql" doc:id="586bb41f-2068-4b5d-a676-c1f403674155" config-ref="HTTP_Request_configuration" path='#["/schemaInfoSql/" ++ p( "schemaConnection." ++ attributes.uriParams.schemaConnection ++ ".dbtype" )]'>
		</http:request>
		<set-variable value="#[%dw 2.0&#10;import * from dw4OdataUtil::codeGenerator::sql_schemainfo&#10;output application/java&#10;var propertyRoot = 'schemaConnection.' ++ vars.schemaConnection ++ &quot;.&quot;&#10;---&#10;{&#10;	connection: vars.schemaConnection,&#10;	dbtype: p( propertyRoot ++ &quot;dbtype&quot; ),&#10;	schemaName: p( propertyRoot ++ &quot;schemaname&quot; ),&#10;	configuredTableNames: p( propertyRoot ++ &quot;tablenames&quot; ) splitBy /,/ map( e, i ) -&gt; trim( e ),&#10;	tableNames: p( propertyRoot ++ &quot;tablenames&quot; ) splitBy /,/ map( e, i ) &#10;		-&gt; trim( if ( e contains( &quot;.&quot; ) ) ( e splitBy( &quot;.&quot; ) )[ 1 ] else e ),&#10;	schemaQuery: payload.schemaQuery,&#10;	fkQuery: payload.fkQuery&#10;}]" doc:name="Set Variable request" doc:id="9b2b58b2-7957-4dd5-9c29-b9a3d58cf3ce" variableName="request" />
		<foreach doc:name="For Each vars.request.configuredTableNames" doc:id="479296eb-8b19-402d-bc13-cfc866bcfebd" collection="#[vars.request.configuredTableNames]" >
			<set-variable value='#[if ( payload contains( "." ) )&#10;	{&#10;		schemaName: ( payload splitBy( "." ) )[ 0 ],&#10;		tableName: ( payload splitBy( "." ) )[ 1 ]&#10;	}&#10;else&#10;	{&#10;		schemaName: vars.request.schemaName,&#10;		tableName: payload&#10;	}]' doc:name="Set Variable tablePointer" doc:id="982c37ea-e01b-46ef-a7b4-499c4b7b49bd" variableName="tablePointer" />
			<flow-ref doc:name="getSchema" doc:id="cc38d7fd-5ae8-4347-b81d-2e0d5b389c1f" name='#["getSchema." ++ vars.request.connection]' />
			<set-variable value="#[vars.fkInfo map( e, i ) -&gt; &#10;	( e mapObject( v, k, j ) -&gt; &#10;		{ ( lower( k ) ): v }&#10;	)]" doc:name="Set Variable fkInfo" doc:id="8c32dfb9-6efa-41ed-ae78-14a01c3880d4" variableName="fkInfo"/>
			<set-variable doc:name="Set Variable dbSchemaInfo" doc:id="46f62b6e-5d3b-478f-9481-d92e01a052a5" variableName="dbSchemaInfo" value="#[%dw 2.0&#10;output application/json&#10;---&#10;( vars.dbSchemaInfo default [] ) &lt;&lt;&#10;(&#10;	vars.tablePointer ++ 	&#10;	{&#10;		fkInfo: vars.fkInfo,&#10;		schemaInfo: payload&#10;	}&#10;)]"/>
		</foreach>
		<http:request method="POST" doc:name="Request" doc:id="77315069-9ef7-4adc-b1b5-fe391b1e58e2" config-ref="HTTP_Request_configuration" path='#["/schemaInfo"]'>
			<http:body ><![CDATA[#[output application/json
---
{
	request: {
		connection: vars.request.connection,
		dbtype: vars.request.dbtype,
		schemaName: vars.request.schemaName,
		configuredTableNames: vars.request.configuredTableNames,
		tableNames: vars.request.tableNames
	},
	dbSchemaInfo: vars.dbSchemaInfo
}]]]></http:body>
		</http:request>
		<foreach doc:name="For Each" doc:id="651b1b15-715d-49b5-a7d5-2d140860b9df" collection="#[payload.fileList]">
			<file:write doc:name="Write" doc:id="a66549ab-dd03-4af0-845a-97e8002df783" config-ref="File_Config_baseDir" path="#[write( p( 'filename.output.base' ) ++ &quot;/&quot; ++ vars.request.connection ++ &quot;/schemaInfo/&quot; ++ payload.outputFile, &quot;text/plain&quot; )]">
				<file:content><![CDATA[#[write( payload.fileContent, "text/plain" )]]]></file:content>
			</file:write>
		</foreach>
		<ee:transform doc:name="Prepare return tablesWithKeyColumnIssue" doc:id="8150187f-6207-47fc-9025-3cda5c5ae0d0">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	outputDirectory: p( 'filename.output.base' ) ++ "/" ++ vars.request.connection ++ "/schemaInfo/",
	WARNING: {
		tables_With_Key_Column_Count_Not_One: payload.tablesWithKeyColumnIssue
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Log tablesWithKeyColumnIssue" doc:id="c469f886-50b5-4533-b7c1-3fc30f8a0d5b" message="#[payload]" />
	</flow>

	<sub-flow name="getSchema.ex_mssql" doc:id="b4c51bf4-c0b9-4cbf-8840-fb6a7aa584d9">
		<db:select doc:name="getFK" doc:id="525582d9-bd1b-44b1-b7d4-fb9bd62e0608" config-ref="Database_Config_EX_MsSql" target="fkInfo">
			<db:sql><![CDATA[#[ vars.request.fkQuery as String ]]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="getSchema" doc:id="1f166340-b00c-4c22-a5a1-58f737609d8f" config-ref="Database_Config_EX_MsSql">
						<db:sql><![CDATA[#[ vars.request.schemaQuery as String ]]]></db:sql>
						<db:input-parameters><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
					</db:select>

</sub-flow>
	<sub-flow name="getSchema.ex_mysql" doc:id="2dd22d19-7559-4080-90d3-6716fd2bf7c5" >
		<db:select doc:name="getFK" doc:id="0d02b702-1d83-495e-98cc-01c7a018260f" config-ref="Database_Config_EX_MySql" target="fkInfo">
			<db:sql ><![CDATA[#[ vars.request.fkQuery as String ]]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="getSchema" doc:id="53da9eae-da85-4853-a5d9-9a02ecb22b12" config-ref="Database_Config_EX_MySql">
						<db:sql><![CDATA[#[ vars.request.schemaQuery as String ]]]></db:sql>
						<db:input-parameters><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
					</db:select>

</sub-flow>
	<sub-flow name="getSchema.ex_oracle" doc:id="6d2f8f8b-75df-4184-b98c-40ebcdffae8e" >
		<db:select doc:name="getFK" doc:id="b7faacd5-08a6-4ee0-b7c0-ab3da17d163c" config-ref="Database_Config_EX_Oracle" target="fkInfo">
			<db:sql ><![CDATA[#[ vars.request.fkQuery as String ]]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="getSchema" doc:id="5c71e451-114e-4035-b836-cc12b68513a9" config-ref="Database_Config_EX_Oracle">
						<db:sql><![CDATA[#[ vars.request.schemaQuery as String ]]]></db:sql>
						<db:input-parameters><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
					</db:select>
	
</sub-flow>

</mule>