<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd">
	<configuration-properties doc:name="Configuration properties" doc:id="45c83007-51b2-49d7-8c52-9682fe158a6e" file="${env}-properties.yaml" />
	<secure-properties:config name="Secure_Properties_Config" doc:name="Secure Properties Config" doc:id="7554af2a-fcf7-43b5-9a3b-c42aaaa2f6d1" file="${env}-properties.yaml" key="${secureKey}" >
	</secure-properties:config>
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="93165de1-544e-4465-91de-69398e3fe07b" >
		<http:listener-connection host="0.0.0.0" port="8888" />
	</http:listener-config>
	<file:config name="File_Config" doc:name="File Config" doc:id="4f867406-ba0b-4747-ab35-d50134a03949" >
		<file:connection workingDir="${filename.baseDir}" />
	</file:config>
	<db:config name="Database_Config_EX_Oracle" doc:name="Database Config" doc:id="7317e7b3-a99a-4ebb-a4f1-2ec75b50c8a2" >
		<db:oracle-connection host="${schemaConnection.ex_oracle.host}" port="${schemaConnection.ex_oracle.port}" user="${schemaConnection.ex_oracle.username}" password="${secure::schemaConnection.ex_oracle.password}" serviceName="${schemaConnection.ex_oracle.serviceName}" />
	</db:config>
	<db:config name="Database_Config_EX_MsSql" doc:name="Database Config" doc:id="d170fca0-7931-4593-8d21-5bacd95d006f" >
		<db:mssql-connection host="${schemaConnection.ex_mssql.host}" port="${schemaConnection.ex_mssql.port}" user="${schemaConnection.ex_mssql.username}" password="${secure::schemaConnection.ex_mssql.password}" databaseName="${schemaConnection.ex_mssql.databaseName}"/>
	</db:config>
	<db:config name="Database_Config_EX_MySql" doc:name="Database Config" doc:id="615087fc-c3b3-4b0a-84e9-139804c02e74" >
		<db:my-sql-connection host="${schemaConnection.ex_mysql.host}" port="${schemaConnection.ex_mysql.port}" user="${schemaConnection.ex_mysql.username}" password="${secure::schemaConnection.ex_mysql.password}" database="${schemaConnection.ex_mysql.database}"/>
	</db:config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="c7eacaeb-633a-4a18-a37f-630de852b349" >
		<http:request-connection host="${codeGenService.host}" port="${codeGenService.port}" connectionIdleTimeout="60000" protocol="HTTPS">
			<tls:context >
				<tls:trust-store insecure="true" />
			</tls:context>
		</http:request-connection>
	</http:request-config>
	<flow name="Schema-InfoFlow" doc:id="a17038c1-0154-4850-96d7-1b6d6b181f11" >
		<http:listener doc:name="Listener" doc:id="4d6913db-ed36-431e-b014-e620f8e48fb2" config-ref="HTTP_Listener_config" path="/schemaInfo/{schemaConnection}"/>
		<set-variable value="#[%dw 2.0&#10;import * from dw4OdataUtil::codeGenerator::sql_schemainfo&#10;output application/java&#10;var propertyRoot = 'schemaConnection.' ++ attributes.uriParams.schemaConnection ++ &quot;.&quot;&#10;---&#10;{&#10;	connection: attributes.uriParams.schemaConnection,&#10;	dbtype: p( propertyRoot ++ &quot;dbtype&quot; ),&#10;	schemaName: p( propertyRoot ++ &quot;schemaname&quot; ),&#10;	configuredTableNames: p( propertyRoot ++ &quot;tablenames&quot; ) splitBy /,/ map( e, i ) -&gt; trim( e ),&#10;	tableNames: p( propertyRoot ++ &quot;tablenames&quot; ) splitBy /,/ map( e, i ) &#10;		-&gt; trim( if ( e contains( &quot;.&quot; ) ) ( e splitBy( &quot;.&quot; ) )[ 1 ] else e ),&#10;	schemaQuery: schemaQuery[ p( propertyRoot ++ &quot;dbtype&quot; ) as String ],&#10;	fkQuery: fkQuery[ p( propertyRoot ++ &quot;dbtype&quot; ) as String ]&#10;}]" doc:name="Set request" doc:id="9b2b58b2-7957-4dd5-9c29-b9a3d58cf3ce" variableName="request" />
		<set-variable value="#[[]]" doc:name="Initialize Variable dbSchemaInfo" doc:id="152d0e2c-19ac-40af-bafc-51412c7fc274" variableName="dbSchemaInfo"/>
		<foreach doc:name="For Each vars.request.configuredTableNames" doc:id="479296eb-8b19-402d-bc13-cfc866bcfebd" collection="#[vars.request.configuredTableNames]" >
			<set-variable value='#[if ( payload contains( "." ) )&#10;	{&#10;		schemaName: ( payload splitBy( "." ) )[ 0 ],&#10;		tableName: ( payload splitBy( "." ) )[ 1 ]&#10;	}&#10;else&#10;	{&#10;		schemaName: vars.request.schemaName,&#10;		tableName: payload&#10;	}]' doc:name="Set tablePointer" doc:id="982c37ea-e01b-46ef-a7b4-499c4b7b49bd" variableName="tablePointer" />
			<flow-ref doc:name="getSchema" doc:id="cc38d7fd-5ae8-4347-b81d-2e0d5b389c1f" name='#["getSchema." ++ vars.request.connection]' />
			<set-variable value="#[vars.fkInfo map( e, i ) -&gt; ( ( e pluck( v, k, j ) -&gt; { ( lower( k ) ): v } ) reduce( vv, a = {} ) -&gt; a ++ vv )]" doc:name="Set Variable" doc:id="8c32dfb9-6efa-41ed-ae78-14a01c3880d4" variableName="fkInfo"/>
			<set-variable doc:name="Set Variable dbSchemaInfo" doc:id="46f62b6e-5d3b-478f-9481-d92e01a052a5" variableName="dbSchemaInfo" value="#[%dw 2.0&#10;output application/json&#10;---&#10;vars.dbSchemaInfo &lt;&lt;&#10;(&#10;	vars.tablePointer ++ 	&#10;	{&#10;		fkInfo: vars.fkInfo,&#10;		schemaInfo: payload&#10;	}&#10;)]"/>
		</foreach>
		<http:request method="POST" doc:name="Request" doc:id="77315069-9ef7-4adc-b1b5-fe391b1e58e2" config-ref="HTTP_Request_configuration" path='#["/schemaInfo"]'>
			<http:body ><![CDATA[#[output application/json
---
{
	request: {
		connection: vars.request.connection,
		dbtype: vars.request.dbtype,
		schemaName: vars.request.schemaName,
		configuredTableNames: vars.request.configuredTableNames,
		tableNames: vars.request.tableNames
	},
	dbSchemaInfo: vars.dbSchemaInfo
}]]]></http:body>
		</http:request>
		<file:write doc:name="Write Schema Json file" doc:id="559b8f3c-4d82-47d3-9670-0d8eb62c27c4" config-ref="File_Config" path="#[p( 'filename.output.base' ) ++ &quot;/&quot; ++ vars.request.connection ++ &quot;/schemaInfo/&quot; ++ vars.request.connection ++ &quot;_schema.json&quot;]">
			<file:content><![CDATA[#[%dw 2.0
output application/json
---
payload.schemaInfo]]]></file:content>
		</file:write>
		<file:write doc:name="Write NavigationReference file" doc:id="2be62a76-2f27-4031-a461-8a893db34b87" config-ref="File_Config" path="#[p( 'filename.output.base' ) ++ &quot;/&quot; ++ vars.request.connection ++ &quot;/schemaInfo/&quot; ++ vars.request.connection ++ &quot;_NavigationReference.json&quot;]">
			<file:content><![CDATA[#[%dw 2.0
output application/json
---
vars.request.tableNames reduce( e, a={} ) -> a ++
    {
        ( e ): 
            if ( ( payload.NavigationReference pluck( v, k, i ) -> ( k as String ) ) contains e ) 
            ( payload.NavigationReference[ e ] )
            else {
                "navigationProperties": []
            }
    }]]]></file:content>
		</file:write>
		<ee:transform doc:name="Prepare return tablesWithKeyColumnIssue" doc:id="8150187f-6207-47fc-9025-3cda5c5ae0d0">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	outputDirectory: p( 'filename.output.base' ) ++ "/" ++ vars.request.connection ++ "/schemaInfo/",
	WARNING: {
		tables_With_Key_Column_Count_Not_One: payload.tablesWithKeyColumnIssue
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Log tablesWithKeyColumnIssue" doc:id="c469f886-50b5-4533-b7c1-3fc30f8a0d5b" message="#[payload]" />
	</flow>

	<sub-flow name="getSchema.ex_mssql" doc:id="b4c51bf4-c0b9-4cbf-8840-fb6a7aa584d9">
		<db:select doc:name="getFK" doc:id="525582d9-bd1b-44b1-b7d4-fb9bd62e0608" config-ref="Database_Config_EX_MsSql" target="fkInfo">
			<db:sql><![CDATA[#[ vars.request.fkQuery as String ]]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="getSchema" doc:id="1f166340-b00c-4c22-a5a1-58f737609d8f" config-ref="Database_Config_EX_MsSql">
						<db:sql><![CDATA[#[ vars.request.schemaQuery as String ]]]></db:sql>
						<db:input-parameters><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
					</db:select>

</sub-flow>
	<sub-flow name="getSchema.ex_mysql" doc:id="2dd22d19-7559-4080-90d3-6716fd2bf7c5" >
		<db:select doc:name="getFK" doc:id="0d02b702-1d83-495e-98cc-01c7a018260f" config-ref="Database_Config_EX_MySql" target="fkInfo">
			<db:sql ><![CDATA[#[ vars.request.fkQuery as String ]]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="getSchema" doc:id="53da9eae-da85-4853-a5d9-9a02ecb22b12" config-ref="Database_Config_EX_MySql">
						<db:sql><![CDATA[#[ vars.request.schemaQuery as String ]]]></db:sql>
						<db:input-parameters><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
					</db:select>

</sub-flow>
	<sub-flow name="getSchema.ex_oracle" doc:id="6d2f8f8b-75df-4184-b98c-40ebcdffae8e" >
		<db:select doc:name="getFK" doc:id="b7faacd5-08a6-4ee0-b7c0-ab3da17d163c" config-ref="Database_Config_EX_Oracle" target="fkInfo">
			<db:sql ><![CDATA[#[ vars.request.fkQuery as String ]]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
		</db:select>
		<db:select doc:name="getSchema" doc:id="5c71e451-114e-4035-b836-cc12b68513a9" config-ref="Database_Config_EX_Oracle">
						<db:sql><![CDATA[#[ vars.request.schemaQuery as String ]]]></db:sql>
						<db:input-parameters><![CDATA[#[{
	schemaName: vars.tablePointer.schemaName,
	tableName: vars.tablePointer.tableName
}]]]></db:input-parameters>
					</db:select>
	
</sub-flow>

</mule>